@{
    ViewData["Title"] = "Profile";
}

@section Styles {
    <!-- External CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@200;300;400;600;900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" />

    <!-- Local CSS -->
    @* <link rel="stylesheet" href="@Url.Content("~/css/newcss.css")" type="text/css"> *@
    <link rel="stylesheet" href="@Url.Content("~/css/bootstrap.min.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/css/font-awesome.min.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/css/elegant-icons.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/css/nice-select.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/css/jquery-ui.min.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/css/owl.carousel.min.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/css/slicknav.min.css")" type="text/css">
    <link rel="stylesheet" href="@Url.Content("~/css/style.css")" type="text/css">


    <style>
        .blog-link {
            color: grey;
            font-weight: bold;
        }

            .blog-link:hover {
                color: black;
            }

        .content-box {
            border-radius: 20px;
            border: 1px solid lightgrey;
            width: 230px;
            margin-bottom: 20px;
            padding: 10px;
        }

        .featured__item__pic img {
            width: 300px;
            height: 300px;
            object-fit: cover; /* Ensures the image covers the dimensions without distortion */
            border-radius: 15px;
        }

        .toast-success {
            background-color: green; /* Set the background color to green for success notifications */
        }

        .toast-warning {
            background-color: orange; /* Set the background color to orange for warning notifications */
        }

        .toast-info {
            background-color: lightblue; /* Set the background color to light blue for info notifications */
        }

        .toast-error {
            background-color: red; /* Set the background color to red for error notifications */
        }

        /* Pagination styling */
        .listPage {
            display: flex;
            justify-content: center;
            list-style: none;
            padding: 0;
            margin: 30px 0;
        }

            .listPage li {
                margin: 0 5px;
                display: inline-block;
            }

                .listPage li a {
                    display: block;
                    padding: 8px 15px;
                    border-radius: 5px;
                    color: #333;
                    text-decoration: none;
                    transition: all 0.3s ease;
                }

                .listPage li.active a {
                    background-color: #7fad39 !important;
                    color: white;
                }

                .listPage li a:hover {
                    background-color: #ddd;
                }

                .listPage li.active a:hover {
                    background-color: #6a9230 !important;
                }

            .listPage .active {
                background-color: white !important;
                color: #fff;
            }
    </style>
}

<div class="container mt-5" id="profilePage">
    <div class="row">
        <div class="col-md-12">
            <div id="content" class="content content-full-width" style="background:white; border-radius:20px">
                <div class="profile">
                    <div class="profile-header">
                        <!-- BEGIN profile-header-content -->
                        <div class="profile-header-content d-flex align-items-center mb-4">
                            <!-- BEGIN profile-header-img -->
                            <div class="profile-header-img">
                                <div class="round-image">
                                    <img id="profilePicture" src=@Url.Content("~/img/default-profile.png") alt="Not Available">
                                </div>
                            </div>
                            <style>
                                .profile-header-img {
                                    width: 175px;
                                    height: 175px;
                                    margin-right: 30px;
                                }

                                .round-image {
                                    width: 100%;
                                    height: 100%;
                                    border-radius: 50%;
                                    overflow: hidden;
                                }

                                    .round-image img {
                                        width: 100%;
                                        height: 100%;
                                        object-fit: cover;
                                    }

                                #blogCount, #followerCount, #followingCount {
                                    font-size: 20px;
                                    font-weight: bold;
                                    margin-right: 20px;
                                }
                            </style>
                            <!-- END profile-header-img -->
                            <!-- BEGIN profile-header-info -->
                            <div class="profile-header-info">
                                <h2 class="m-t-10 m-b-5" style="color: black;">
                                    <span id="displayName">Loading...</span>
                                    <!--1.-->
                                </h2>
                                <p class="m-b-10">@@<span id="userId">...</span></p>
                                <p class="m-t-10 m-b-5 text-black-50">
                                    <span id="blogCount">0 Bài viết</span>
                                    <span id="followerCount">
                                        0
                                        <a data-target="#modal-follower-list" data-toggle="modal" href="#modal-follower-list" style="color:black;">Theo Dõi</a>
                                    </span>
                                    <span id="followingCount">
                                        0
                                        <a data-target="#modal-following-list" data-toggle="modal" href="#modal-following-list" style="color:black;">Đang Theo Dõi</a>
                                    </span>
                                </p>
                                <div class="following-follower" style="height: 55px"><!--2.--></div>
                                <input type="hidden" id="curUserID" value="" />
                                <input type="hidden" id="userID" value="" />
                            </div>
                            <!-- END profile-header-info -->
                        </div>
                        <hr>
                        <!-- END profile-header-content -->

                        <div class="profile-header-tabs">
                            <ul class="nav nav-tabs" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="postBtn" href="#post-list" data-toggle="tab" onclick="toTab('post')">Bài viết</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="bookmarkBtn" href="#bookmark-list" data-toggle="tab" onclick="toTab('bookmark')">Đánh dấu</a>
                                </li>
                                <li class="nav-item position-relative">
                                    <a class="nav-link" id="notificationBtn" href="#notify-list" data-toggle="tab" onclick="toTab('notification')">Thông báo</a>
                                    <span id="redDot" style="position: absolute; top: 6px; right: 8px; width: 10px; height: 10px; background: red; border-radius: 50%; display: none;"></span>
                                </li>

                            </ul>
                        </div>

                        <!-- begin profile-content -->
                        <div class="profile-content">
                            <!-- begin tab-content -->
                            <div class="tab-content p-0">
                                <!-- begin #profile-post tab -->
                                <div class="tab-pane fade active show" id="profile-post">
                                    <!-- begin timeline -->
                                    <!-- Blogs -->
                                    <div id="post-list" class="text-center">
                                        <!--3.-->
                                        <div id="blogsContainer" class="row g-4"></div>
                                        <div class="row">
                                            <div class="col-lg-12">
                                                <div class="row">
                                                    <div class="col-lg-12"><!--4.--></div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row text-center">
                                            <!--5.-->
                                        </div>
                                        <ul class="pagination justify-content-center listPage blogPagination"></ul>
                                    </div>
                                    <!-- end Blogs -->
                                    <!-- begin Bookmark -->
                                    <div id="bookmark-list" class="text-center" style="display: none">
                                        <div id="bookmarkContainer" class="row"></div>
                                        <div class="row text-center"></div>

                                        <ul class="pagination justify-content-center listPage bookmarkPagination"></ul>
                                    </div>
                                    <!-- end Bookmark List -->
                                    <!-- begin Notification -->
                                    <div id="notify-list" class="" style="display: none">
                                        <div id="notifyContainer" class="row g-4"></div>
                                        <div class="row"><!--6.--></div>
                                    </div>
                                    <!-- end Notifications -->
                                </div>
                                <!-- end #profile-post tab -->
                            </div>
                            <!-- end tab-content -->
                        </div>
                        <!-- end profile-content -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="modal-edit-user" tabindex="-1" role="dialog" aria-labelledby="editUserModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title" id="editUserModalLabel">Cập nhật thông tin</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <form id="editProfileForm" onsubmit="return saveProfile(event);" method="post" enctype="multipart/form-data">
                        <input type="hidden" id="profileID" name="UserId" value="" />
                        <div class="form-group">
                            <label for="displayname">Tên hiển thị:</label>
                            <input type="text" class="form-control" id="displayname" name="DisplayName" required />
                        </div>
                        <div class="form-group text-center">
                            <label>Ảnh đại diện hiện tại:</label><br />
                            <img id="profilePicturePreview"
                                 src="/img/default-profile.png"
                                 alt="Preview"
                                 class="rounded-circle"
                                 style="width: 120px; height: 120px; object-fit: cover; margin-bottom: 10px;" />
                        </div>
                        <div class="form-group">
                            <label for="imageLink">Ảnh đại diện mới:</label>
                            <input type="file" class="form-control" id="imageLink" name="ImageLink" accept="image/png, image/jpg, image/jpeg" />
                        </div>
                        <div class="form-group">
                            <label for="phone">Số điện thoại liên hệ:</label>
                            <input type="tel" class="form-control" id="phone" name="Phone" required />
                        </div>
                        @* <div class="form-group">
                            <label for="location">Địa điểm:</label>
                            <input type="text" class="form-control" id="location" name="Location" readonly />
                        </div>
                        <div class="form-group">
                            <label for="newLocation">Chọn địa điểm mới:</label>
                        </div>
                        <div class="form-group">
                            <label for="password">Mật khẩu: </label>
                            <a href="/Profile/UpdatePassword" class="btn btn-primary">Cập nhật mật khẩu tại đây</a>
                        </div> *@
                        <!-- Modal footer -->
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-success">Save</button>
                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <script>
        let currentBlogPage = 1;
        let currentBookmarkPage = 1;
        const pageSize = 8;

        $(document).ready(function () {
            const urlParams = new URLSearchParams(window.location.search);
            const userId = urlParams.get('id');
            const curUserId = urlParams.get('id');

            $("#userID").val(userId);
            $("#curUserID").val(curUserId);

            loadUserInfo(userId);
            loadUserBlogs(userId, currentBlogPage);
            checkNotifications(userId);

            toTab('post');
            isOwner(userId, curUserId);

            $(document).on('click', '#editProfileBtn', function () {
                $.ajax({
                    url: `http://localhost:5029/api/Profile/${userId}`,
                    method: "GET",
                    success: function (user) {
                        $('#displayname').val(user.displayName || '');
                        $('#phone').val(user.userPhone || '');
                        $('#location').val(user.location || '');

                        if (user.userImage) {
                            $('#profilePicturePreview').attr('src', `data:image/png;base64,${user.userImage}`);
                        }

                    $('#imageLink').on('change', function (e) {
                        const file = e.target.files[0];
                        if (file) {
                            const reader = new FileReader();
                            reader.onload = function (e) {
                                $('#profilePicturePreview').attr('src', e.target.result);
                            };
                            reader.readAsDataURL(file);
                        }
                    });
                    },
                    error: function () {
                        toastr.error("Failed to load user info for editing.");
                    }
                });
            });

            $(document).on('click', '#postBtn', function (e) {
                e.preventDefault();
                const userId = $("#userID").val();
                currentBlogPage = 1; // Reset to first page
                loadUserBlogs(userId, currentBookmarkPage);
                toTab('post');
            });

            $(document).on('click', '#bookmarkBtn', function (e) {
                e.preventDefault();
                const userId = $("#userID").val();
                currentBookmarkPage = 1; // Reset to first page
                loadBookmarks(userId, currentBookmarkPage);
                toTab('bookmark');
            });

            $(document).on('click', '#notificationBtn', function (e) {
                e.preventDefault();
                const userId = $("#userID").val();
                openNotifications(userId);
                toTab('notification');
            });
        });

                // Handle remove blog button click
        $(document).on('click', '.remove-blog-btn', function (e) {
            e.preventDefault();
            e.stopPropagation();

            const blogId = $(this).data('blog-id');
            const blogCard = $(this).closest('.col-xl-3');

            // Show confirmation dialog
            if (confirm('Bạn có chắc chắn muốn xóa bài viết này không?')) {
                $.ajax({
                    url: `http://localhost:5029/api/Blog/remove/${blogId}`,
                    method: "PUT",
                    success: function (response) {
                        // Show success message from response
                        toastr.success(response);

                        // Remove the blog card from UI
                        blogCard.fadeOut(300, function() {
                            $(this).remove();

                            // Update blog count
                            const currentCount = parseInt($('#blogCount').text().split(' ')[0]);
                            $('#blogCount').text(`${currentCount - 1} Bài viết`);

                            // Reload the page if needed to update pagination
                            const userId = $("#userID").val();
                            loadUserBlogs(userId, currentBlogPage);
                        });
                    },
                    error: function (xhr) {
                        if (xhr.status === 404) {
                            toastr.error("Không tìm thấy bài viết này.");
                        } else {
                            toastr.error("Có lỗi xảy ra khi xóa bài viết. Vui lòng thử lại.");
                        }
                    }
                });
            }
        });


        function loadUserInfo(userId) {
            $.get(`http://localhost:5029/api/Profile/${userId}`, function (user) {
                $('#displayName').text(user.displayName);
                $('#userId').text(user.username.toLowerCase());

                if (user.userImage) {
                    $('#profilePicture').attr('src', `data:image/png;base64,${user.userImage}`);
                } else {
                    $('#profilePicture').attr('src', '/img/default-profile.png');
                }

                if (user.roleId == 3 && $('#reportUserBtn').length === 0) {
                    $('#displayName').after(`
                        <span data-toggle="modal" data-target="#modal-report-user" id="reportUserBtn" title="Report User" style="cursor: pointer;">
                            <i class="fa fa-exclamation-triangle" id="flag-icon" style="font-size: 15px; color: red; margin-left: 30px;"></i>
                            <small style="font-size: 15px; color: red;">Báo cáo người dùng</small>
                        </span>
                    `);
                }

                $("#profileID").val(user.userId);
            }).fail(() => {
                toastr.error("Failed to load user info.");
            });
        }


                function loadUserBlogs(userId, page, pageSize = 8) {
            $.ajax({
                url: `http://localhost:5029/api/Profile/${userId}/blogs?page=${page}&pageSize=${pageSize}`,
                method: "GET",
                success: function (data) {
                    const blogs = data.blogs;
                    const totalCount = data.totalCount;

                    $('#blogsContainer').empty();
                    $('#blogCount').text(`${totalCount} Bài viết`);

                    if (!blogs || blogs.length === 0) {
                        $('#blogsContainer').append(`
                            <div id="empty-bookmark-box" style="text-align: center">
                                <p style="font-weight: bold;">It's quite empty here...</p>
                            </div>
                        `);
                    } else {
                        blogs.forEach(blog => {
                            const blogHtml = `
                                <div class="col-xl-3 col-sm-6 mb-5 rounded-sm">
                                    <div class="shadow-sm content-box position-relative">
                                        <button class="btn btn-danger btn-sm remove-blog-btn position-absolute"
                                                data-blog-id="${blog.blogId}"
                                                style="top: 10px; right: 10px; z-index: 10; padding: 5px 8px;">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                        <div class="featured__item__pic">
                                            <img src="data:image/jpeg;base64,${blog.image}" alt="">
                                        </div>
                                        <h5 class="mb-0 mt-3">
                                            <a class="blog-link" href="/Blog/Details?id=${blog.blogId}">${blog.blogTitle}</a>
                                        </h5>
                                    </div>
                                </div>`;
                            $('#blogsContainer').append(blogHtml);
                        });
                    }

                    updatePagination('.blogPagination', page, pageSize, totalCount);
                },
                error: function () {
                    toastr.error("Failed to load blogs.");
                }
            });
        }

        function loadBookmarks(userId, page = 1, pageSize = 8) {
            $.get(`http://localhost:5029/api/Profile/${userId}/bookmarks?page=${page}&pageSize=${pageSize}`, function (response) {
                const bookmarks = response.bookmarks || [];
                const totalCount = response.totalCount || 0;

                $('#bookmarkContainer').empty();

                if (bookmarks.length === 0) {
                    $('#bookmarkContainer').html(`
                        <div id="empty-bookmark-box" style="text-align: center">
                            <p style="font-weight: bold;">Không có gì ở đây cả ...</p>
                        </div>
                    `);
                } else {
                    bookmarks.forEach(blog => {
                        const html = `
                            <div class="col-xl-3 col-sm-6 mb-5 rounded-sm">
                                <div class="shadow-sm content-box">
                                    <div class="featured__item__pic">
                                        <img src="data:image/*;base64,${blog.image}" alt="">
                                    </div>
                                    <h5 class="mb-0 mt-3">
                                        <a class="blog-link" href="/Blog/Details?id=${blog.blogId}">${blog.blogTitle}</a>
                                    </h5>
                                </div>
                            </div>
                        `;
                        $('#bookmarkContainer').append(html);
                    });
                }

                updatePagination('.bookmarkPagination', page, pageSize, totalCount);
            }).fail(() => toastr.error("Failed to load bookmarks."));
        }

        function checkNotifications(userId) {
            $.get(`http://localhost:5029/api/Profile/${userId}/notifications`, function (notifs) {
                const hasUnread = notifs.some(n => !n.isRead);
                $('#redDot').toggle(hasUnread);
            }).fail(() => console.warn("Unable to check notifications."));
        }

        function loadNotifications(userId) {
            $.get(`http://localhost:5029/api/Profile/${userId}/notifications`, function (notifs) {
                const container = $('#notifyContainer');
                container.empty();

                if (notifs.length === 0) {
                    container.html(`
                        <div id="empty-notify-box" style="text-align: center">
                            <p style="font-weight: bold;">Không có gì ở đây cả ...</p>
                        </div>
                    `);
                } else {
                    notifs.forEach(notif => {
                        const html = `
                            <div class="col-xl-12">
                                <div class="shadow-sm py-3 px-4 ${notif.isRead ? '' : 'bg-light'}">
                                    <span class="time text-danger">${new Date(notif.timestamp).toLocaleString()}</span>
                                    <h5>${notif.title}</h5>
                                    <span class="date">${notif.message}</span>
                                </div>
                            </div>
                        `;
                        container.append(html);
                    });
                }
            }).fail(() => toastr.error("Failed to load notifications."));
        }


        function openNotifications(userId) {
            // Mark all as read on tab click
            $.post(`http://localhost:5029/api/Profile/${userId}/notifications/read-all`, function () {
                $('#redDot').hide();
                loadNotifications(userId); // Refresh
            });
        }

        function updatePagination(containerSelector, currentPage, pageSize, totalItems) {
            const totalPages = Math.ceil(totalItems / pageSize);
            const pagination = $(containerSelector);
            pagination.empty();

            if (totalPages <= 1) return;

            // Previous button
            if (currentPage > 1) {
                pagination.append(`
                    <li class="page-item">
                        <a class="page-link" href="#" data-page="${currentPage - 1}">«</a>
                    </li>`);
            }

            // Page numbers
            for (let i = 1; i <= totalPages; i++) {
                pagination.append(`
                    <li class="page-item ${i === currentPage ? 'active' : ''}">
                        <a class="page-link" href="#" data-page="${i}">${i}</a>
                    </li>`);
            }

            // Next button
            if (currentPage < totalPages) {
                pagination.append(`
                    <li class="page-item">
                        <a class="page-link" href="#" data-page="${currentPage + 1}">»</a>
                    </li>`);
            }
        }

        // Handle blog pagination
        $(document).on('click', '.blogPagination .page-link', function (e) {
            e.preventDefault();
            const newPage = parseInt($(this).data('page'));
            if (!isNaN(newPage) && newPage !== currentBlogPage) {
                currentBlogPage = newPage;
                const userId = $("#userID").val();
                loadUserBlogs(userId, currentBlogPage);
            }
        });

        // Handle bookmark pagination
        $(document).on('click', '.bookmarkPagination .page-link', function (e) {
            e.preventDefault();
            const newPage = parseInt($(this).data('page'));
            if (!isNaN(newPage) && newPage !== currentBookmarkPage) {
                currentBookmarkPage = newPage;
                const userId = $("#userID").val();
                loadBookmarks(userId, currentBookmarkPage);
            }
        });

        function toTab(tab) {
            const postTab = document.getElementById("post-list");
            const bookmarkTab = document.getElementById("bookmark-list");
            const notificationTab = document.getElementById("notify-list");

            const postBtn = document.getElementById("postBtn");
            const bookmarkBtn = document.getElementById("bookmarkBtn");
            const notificationBtn = document.getElementById("notificationBtn");

            if (postTab) postTab.style.display = (tab === "post") ? '' : 'none';
            if (bookmarkTab) bookmarkTab.style.display = (tab === "bookmark") ? '' : 'none';
            if (notificationTab) notificationTab.style.display = (tab === "notification") ? '' : 'none';

            if (postBtn) postBtn.style.color = (tab === "post") ? 'black' : 'lightgrey';
            if (bookmarkBtn) bookmarkBtn.style.color = (tab === "bookmark") ? 'black' : 'lightgrey';
            if (notificationBtn) notificationBtn.style.color = (tab === "notification") ? 'black' : 'lightgrey';
        }

        function isOwner(userId, curUserId){
            $.get(`http://localhost:5029/api/Profile/isOwner/${userId}/${curUserId}`, function(isOwner){
                if (isOwner) {
                    $('#displayName').after(`
                        <i id="editProfileBtn" class="fa fa-pencil" data-toggle="modal" data-target="#modal-edit-user" title="Edit" style="font-size: 15px; cursor: pointer;"></i>
                        <small style="font-size: 10px;">Edit</small>
                    `);


                }
            }).fail(function() {
                console.error("Failed to check ownership status.");
            })
        }

        // Save profile (example, needs backend integration)
        function saveProfile(event) {
            event.preventDefault();

            var form = $('#editProfileForm')[0];
            var formData = new FormData(form);

            $.ajax({
                url: `http://localhost:5029/api/Profile/UpdateProfile`,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    toastr.success("Profile updated successfully!");
                    $('#modal-edit-user').modal('hide');
                    location.reload();
                },
                error: function () {
                    toastr.error("Failed to update profile.");
                }
            });

            return false;
        }

        // Toastr notification from Razor
        @if (ViewBag.Notify != null)
        {
                <text>
                    $(document).ready(function () {
                        toastr.options = {
                            "timeOut": "10000",
                            "extendedTimeOut": "1000",
                            "closeButton": true,
                            "progressBar": true
                        };
                        toastr['@ViewBag.Notify.Type']('@ViewBag.Notify.Title', '@ViewBag.Notify.Message');
                    });
                </text>
        }

        // Change follow status
        function changeStatus(follower, following, action) {
            $.ajax({
                url: '/Profile/FollowUser', // Update to your Razor Pages handler or API endpoint
                type: 'POST',
                data: {
                    follower: follower,
                    following: following,
                    action: action
                },
                success: function (response) {
                    // Optionally handle response
                }
            });
        }

        // Add to follower list (example, needs backend integration)
        function addToFollower() {
            $.ajax({
                url: '/Profile/AddToList', // Update to your Razor Pages handler or API endpoint
                type: 'GET',
                success: function (data) {
                    var row = document.getElementById("modalContent");
                    row.innerHTML += data;
                },
                error: function (xhr) {
                    // Optionally handle error
                }
            });
        }

        // Toggle follow/unfollow button
        $(document).ready(function () {
            const toggleButton = document.getElementById('toggleButton');
            if (toggleButton) {
                toggleButton.addEventListener('click', function () {
                    const isFollowing = toggleButton.classList.contains('btn-danger');
                    const profileID = document.getElementById('profileID').value;
                    const userID = document.getElementById('userID').value;
                    const followerCountSpan = document.getElementById('followerCount');

                    if (isFollowing) {
                        toggleButton.classList.remove('btn-danger');
                        toggleButton.classList.add('btn-light');
                        toggleButton.textContent = 'Following';
                        followerCountSpan.textContent = (parseInt(followerCountSpan.textContent, 10) + 1);
                        followerCountSpan.innerHTML += `<a data-target="#modal-follower-list" data-toggle="modal" href="#modal-follower-list" style="color:black;"> Follower</a>`;
                        const currentUser = document.getElementById(profileID);
                        if (currentUser === null)
                            addToFollower();
                        else
                            currentUser.style.display = 'block';
                        changeStatus(profileID, userID, 'follow');
                    } else {
                        toggleButton.classList.remove('btn-light');
                        toggleButton.classList.add('btn-danger');
                        toggleButton.textContent = 'Follow';
                        followerCountSpan.textContent = (parseInt(followerCountSpan.textContent, 10) - 1);
                        followerCountSpan.innerHTML += `<a data-target="#modal-follower-list" data-toggle="modal" href="#modal-follower-list" style="color:black;"> Follower</a>`;
                        const currentUserModal = document.getElementById(profileID);
                        if (currentUserModal)
                            currentUserModal.style.display = 'none';
                        changeStatus(profileID, userID, 'unfollow');
                    }
                });
            }
        });

        // Set the selected option in the filter dropdown based on the 'action' query parameter
        $(document).ready(function () {
            const urlParams = new URLSearchParams(window.location.search);
            const action = urlParams.get('action');
            const menuSelect = document.querySelector('#menuSelect');
            if (!menuSelect) return;

            let value = '@Url.Page("/Profile/Index", new { ID = ViewBag.CurrentUserId })';
            if (action === 'approved') {
                value = '@Url.Page("/Profile/Index", new { ID = ViewBag.CurrentUserId, action = "approved" })';
            } else if (action === 'unapproved') {
                value = '@Url.Page("/Profile/Index", new { ID = ViewBag.CurrentUserId, action = "unapproved" })';
            } else if (action === 'report') {
                value = '@Url.Page("/Profile/Index", new { ID = ViewBag.CurrentUserId, action = "report" })';
            } else if (action === 'rejected') {
                value = '@Url.Page("/Profile/Index", new { ID = ViewBag.CurrentUserId, action = "rejected" })';
            }
            menuSelect.value = value;
        });

        // Handle filter dropdown change
        function handleSelectChange(select) {
            const selectedValue = select.value;
            window.location.href = selectedValue;
        }

        // Bookmark visibility check (if needed)
        function checkBookmarkVisibility() {
            const bookmarksSection = document.getElementById('bookmark-list');
            const visibleItems = Array.from(document.querySelectorAll('.row.text-center .col-xl-3'))
                .filter(item => item.style.display === 'block');
            const bookmarkVisible = visibleItems.some(item => item.classList.contains('bookmark-item'));
            if (bookmarksSection)
                bookmarksSection.style.display = bookmarkVisible ? 'block' : 'none';
        }
    </script>
}