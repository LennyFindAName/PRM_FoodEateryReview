@{
	Layout = "_Layout";
	ViewData["Title"] = "Blog Moderation";
}

@section Styles {
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" type="text/css">
	<link rel="stylesheet" href="@Url.Content("~/css/bootstrap.min.css")" type="text/css">
	<link rel="stylesheet" href="@Url.Content("~/css/style.css")" type="text/css">
	<style>
		.moderation-card {
			border: 1px solid #eee;
			border-radius: 8px;
			margin-bottom: 30px;
			padding: 20px;
			background: #fff;
		}

		.moderation-actions {
			margin-top: 15px;
		}

		.opinion-box {
			background: #f8f9fa;
			border-left: 4px solid #007bff;
			padding: 10px 15px;
			margin-bottom: 10px;
			font-style: italic;
		}

		.blog-image-thumb {
			max-width: 120px;
			max-height: 120px;
			margin-right: 10px;
			border-radius: 4px;
			border: 1px solid #eee;
		}
		.page-number-box {
			display: inline-block;
			min-width: 32px;
			padding: 4px 10px;
			margin: 0 2px;
			border: 1px solid #007bff;
			border-radius: 4px;
			background: #fff;
			color: #007bff;
			cursor: pointer;
			transition: background 0.2s, color 0.2s;
			text-align: center;
			user-select: none;
		}
		.page-number-box.active, .page-number-box:disabled {
			background: #007bff;
			color: #fff;
			cursor: default;
			font-weight: bold;
		}
		.page-number-box.ellipsis {
			border: none;
			background: transparent;
			color: #888;
			cursor: default;
		}
	</style>
}

@section Scripts {
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
	<script>
			$(document).ready(function () {
				loadPendingBlogs();
			});

			let currentPage = 1;
			let pageSize = 5; // or whatever default you want
			let totalCount = 0;


				function statusText(status) {
				switch (status) {
					case 1: return '<span class="text-success">Approved</span>';
					case -1: return '<span class="text-danger">Rejected</span>';
					case 0: return '<span class="text-warning">Pending</span>';
					default: return '<span class="text-secondary">Unknown</span>';
				}
			}

			function renderBlogs(blogs) {
				const container = $('#pending-blogs');
				container.empty();
				if (!blogs.length) {
					container.append('<div class="alert alert-info">No blogs found.</div>');
					return;
				}
				blogs.forEach(blog => {
					const imageHtml = blog.firstImage
						? `<img src="data:image/jpeg;base64,${blog.firstImage}" class="blog-image-thumb" />`
						: 'No image';

					const opinionHtml = blog.opinion
						? blog.opinion
						: 'No opinion available.';

					container.append(`
						<div class="moderation-card" id="blog-${blog.blogId}">
							<h5>${blog.blogTitle ?? '(No Title)'}</h5>
							<div><strong>By User:</strong> ${blog.username ?? blog.userId}</div>
							<div><strong>Date:</strong> ${blog.blogDate ?? '-'}</div>
							<div><strong>Likes:</strong> ${blog.blogLike ?? 0}</div>
							<div><strong>Status:</strong> ${statusText(blog.blogStatus)}</div>
							<div><strong>Image:</strong> ${imageHtml}</div>
							<div class="opinion-box">${opinionHtml}</div>
							<div class="mb-2">
								<label for="opinion-${blog.blogId}" class="form-label">Moderator Opinion (optional):</label>
								<textarea id="opinion-${blog.blogId}" class="form-control" rows="2" placeholder="Enter your reason or comment..."></textarea>
							</div>
							<div class="moderation-actions">
								<button class="btn btn-success" onclick="reviewBlog(${blog.blogId}, true)">Approve</button>
								<button class="btn btn-danger" onclick="reviewBlog(${blog.blogId}, false)">Reject</button>
								<button class="btn btn-primary" onclick="assessByAI(${blog.blogId})">Assess by AI</button>
							</div>
						</div>
					`);

				});
			}

			function getSearchParams() {
				return {
					title: $('#searchTitle').val(),
					username: $('#searchUsername').val(),
					dateFrom: $('#searchDateFrom').val(),
					dateTo: $('#searchDateTo').val(),
					status: $('#searchStatus').val()
				};
			}


		function loadPendingBlogs() {
			let url = '/Moderation/GetBlogs';
			let params = getSearchParams();
			params.page = currentPage;
			params.pageSize = pageSize;

			// Remove empty params
			Object.keys(params).forEach(key => {
				if (!params[key]) delete params[key];
			});

			$.getJSON(url, params, function (result) {
				totalCount = result.totalCount;
				renderBlogs(result.blogPosts);
				updatePagingInfo();
			}).fail(function () {
				toastr.error('Failed to load pending blogs.');
			});
		}

		function updatePagingInfo() {
			const totalPages = Math.ceil(totalCount / pageSize);
			$('#pageInfo').text(`Page ${currentPage} of ${totalPages}`);
			$('#prevPage').prop('disabled', currentPage <= 1);
			$('#nextPage').prop('disabled', currentPage >= totalPages);

			const pageNumbersContainer = $('#pageNumbers');
			pageNumbersContainer.empty();
			if (totalPages <= 1) return;

			const createPageBtn = (page, text, isActive = false, isEllipsis = false) => {
				if (isEllipsis) {
					return $(`<span class="page-number-box ellipsis">${text}</span>`);
				}
				const btn = $(`<span class="page-number-box${isActive ? ' active' : ''}">${text}</span>`);
				if (!isActive) {
					btn.click(function () {
						currentPage = page;
						loadPendingBlogs();
					});
				}
				return btn;
			};

			let pages = [];

			if (totalPages <= 5) {
				for (let i = 1; i <= totalPages; i++) {
					pages.push(i);
				}
			} else {
				if (currentPage <= 3) {
					pages = [1, 2, 3, 4, '...', totalPages];
				} else if (currentPage >= totalPages - 2) {
					pages = [1, '...', totalPages - 3, totalPages - 2, totalPages - 1, totalPages];
				} else {
					pages = [1, '...', currentPage - 1, currentPage, currentPage + 1, '...', totalPages];
				}
			}

			for (let i = 0; i < pages.length; i++) {
				const p = pages[i];
				if (p === '...') {
					pageNumbersContainer.append(createPageBtn(null, '...', false, true));
				} else {
					pageNumbersContainer.append(createPageBtn(p, p, p === currentPage));
				}
			}
		}


		$('#prevPage').click(function () {
			if (currentPage > 1) {
				currentPage--;
				loadPendingBlogs();
			}
		});

		$('#nextPage').click(function () {
			const totalPages = Math.ceil(totalCount / pageSize);
			if (currentPage < totalPages) {
				currentPage++;
				loadPendingBlogs();
			}
		});


		$('.form-control').on('input change', function () {
			currentPage = 1;
			loadPendingBlogs();
		});

		function reviewBlog(blogId, isApproved) {
			if (!confirm(isApproved ? 'Approve this blog?' : 'Reject this blog?')) return;
			const opinion = $(`#opinion-${blogId}`).val();
			$.ajax({
				url: `/Moderation/ReviewBlog?blogId=${blogId}`,
				method: 'POST',
				contentType: 'application/json',
				data: JSON.stringify({ request: isApproved ? 1 : -1, opinion }),
				success: function () {
					toastr.success(isApproved ? 'Blog approved.' : 'Blog rejected.');
					loadPendingBlogs();
				},
				error: function (xhr) {
					toastr.error(xhr.responseText || 'Action failed.');
				}
			});
		}

		function assessByAI(blogId) {
			if (!confirm('Let AI assess this blog?')) return;
			$.ajax({
				url: `/Moderation/AssessByAI?blogId=${blogId}`,
				method: 'POST',
				success: function (result) {
					toastr.success(result.message || 'AI assessment complete.');
					loadPendingBlogs();
				},
				error: function (xhr) {
					toastr.error(xhr.responseText || 'AI assessment failed.');
				}
			});
		}
	</script>
}

<section class="breadcrumb-section set-bg content-below-header"
		 data-setbg="@Url.Content("~/img/banner/blog.jpg")"
		 style="background-image: url('@Url.Content("/img/banner/blog.jpg")'); background-size: cover; background-position: center;">
	<div class="container">
		<div class="row">
			<div class="col-lg-12 text-center">
				<div class="breadcrumb__text">
					<h2>Duyệt bài viết</h2>
				</div>
			</div>
		</div>
	</div>
</section>

<section class="checkout spad">
	<div class="container">
		<div class="checkout__form">
			<h4>Bài viết chờ duyệt</h4>
			<div class="row mb-3">
				<div class="col">
					<div class="mb-2">
						<label for="searchTitle" class="form-label">Title</label>
						<input id="searchTitle" class="form-control" type="text" placeholder="Title" />
					</div>
				</div>
				<div class="col">
					<div class="mb-2">
						<label for="searchUsername" class="form-label">Username</label>
						<input id="searchUsername" class="form-control" type="text" placeholder="Username" />
					</div>
				</div>
				<div class="col">
					<div class="mb-2">
						<label for="searchDateFrom" class="form-label">Date From</label>
						<input id="searchDateFrom" class="form-control" type="date" placeholder="Date From" />
					</div>
				</div>
				<div class="col">
					<div class="mb-2">
						<label for="searchDateTo" class="form-label">Date To</label>
						<input id="searchDateTo" class="form-control" type="date" placeholder="Date To" />
					</div>
				</div>
				<div class="col">
					<div class="mb-2">
						<label for="searchStatus" class="form-label">Status</label>
						<select id="searchStatus" class="form-control">
							<option value="">Status</option>
							<option value="0">Pending</option>
							<option value="1">Approved</option>
							<option value="-1">Rejected</option>
						</select>
					</div>
				</div>
			</div>
			<div class="mb-3">
				<button id="prevPage" class="btn btn-secondary btn-sm">Previous</button>
				<span id="pageNumbers"></span>
				<button id="nextPage" class="btn btn-secondary btn-sm">Next</button>
				<span id="pageInfo"></span>
			</div>
			<div id="pending-blogs"></div>
		</div>
	</div>
</section>
